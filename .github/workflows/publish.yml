name: Publish

on:
  pull_request:
    branches:
    - main
    types: [closed]

permissions:
  contents: write
  pull-requests: write
  packages: write

jobs:
  publish:
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'releases/')

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-node@v1
      with:
        node-version: 14.x
        registry-url: 'https://npm.pkg.github.com'
    - run: yarn --frozen-lockfile

    - name: Setup git
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - uses: ./.github/actions/release-meta
      id: release-meta

    - name: Update CHANGELOG.md
      run: |
        mkdir -p tmp
        echo "${RELEASE_NOTE}" > tmp/CHANGELOG.head.md
        git show ${{ github.base_ref }}:./CHANGELOG.md > tmp/CHANGELOG.base.md
        cat -s tmp/CHANGELOG.head.md tmp/CHANGELOG.base.md > CHANGELOG.md

        git add CHANGELOG.md
        git commit -m "Update CHANGELOG for ${RELEASE_TAG}"
        git push
      env:
        RELEASE_TAG: ${{ steps.release-meta.outputs.tag }}
        RELEASE_NOTE: ${{ steps.release-meta.outputs.note }}

    - name: Create git tag
      run: |
        git tag $RELEASE_TAG
        git push --tags
      env:
        RELEASE_TAG: ${{ steps.release-meta.outputs.tag }}

    - name: Create GitHub Release
      uses: actions/github-script@v4
      with:
        script: |
          github.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: process.env.RELEASE_TAG,
            tag_name: process.env.RELEASE_TAG,
            body: process.env.RELEASE_NOTE,
            prerelease: /v\d+\.\d+\.\d+-.+/.test(process.env.RELEASE_TAG),
          })
      env:
        RELEASE_NOTE: ${{ steps.release-meta.outputs.note }}
        RELEASE_TAG: ${{ steps.release-meta.outputs.tag }}

    - name: Publish to npm
      run: |
        yarn lerna publish from-package --yes
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Comment to PR
      uses: actions/github-script@v4
      with:
        script: |
          github.issues.createCommit({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number,
            body: `https://github.com/${context.repo.owner}/${context.repo.repo}/releases/tag/${process.env.RELEASE_TAG} is released ðŸš€`,
          })
      env:
        RELEASE_TAG: ${{ steps.release-meta.outputs.tag }}
